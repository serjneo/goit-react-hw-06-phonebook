{"version":3,"sources":["redux/actons.js","redux/reducers.js","redux/store.js","components/Container/Container.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["actons","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","contacts","createReducer","state","action","filter","contact","_","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","storeConf","persistor","persistStore","Container","children","className","getContacts","filterValue","filteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","onSubmit","e","preventDefault","find","checkRepeatName","checkRepeatNumber","toast","info","autoClose","type","pattern","title","required","onChange","Filter","placeholder","ContactList","map","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9f0809a6.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/addContact', (name, number) => ({\n  payload: { id: shortid.generate(), name, number },\n}));\nconst deleteContact = createAction('contacts/deleteContact');\nconst filterContacts = createAction('contacts/filterContacts');\n\nconst actons = { addContact, deleteContact, filterContacts };\nexport default actons;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport actons from './actons';\n\nconst contacts = createReducer([], {\n  [actons.addContact]: (state, action) => [...state, action.payload],\n  [actons.deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\nconst filter = createReducer('', {\n  [actons.filterContacts]: (_, action) => action.payload,\n});\n\nconst rootReducer = combineReducers({ contacts, filter });\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: true,\n});\n\nconst persistor = persistStore(store);\n\nconst storeConf = { store, persistor };\n\nexport default storeConf;\n","const Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts;\nexport const filterValue = state => state.filter;\n\nexport const filteredContacts = state => {\n  const contact = getContacts(state);\n  const filter = filterValue(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contact.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport actons from '../../redux/actons';\nimport { getContacts } from '../../redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport './ContactForm.scss';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast.info(`'${name}' is already in use!`, {\n        autoClose: 2500,\n      });\n    } else if (checkRepeatNumber(number)) {\n      toast.info(`🤔 ${number} is already in use`, {\n        autoClose: 2500,\n      });\n    } else {\n      dispatch(actons.addContact(name, number));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form id=\"contact\" className=\"form\" onSubmit={handleSubmit}>\n      <label>\n        <p className=\"title\">Name:</p>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <p className=\"title\">Number:</p>\n        <input\n          className=\"input\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className=\"button\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { filterValue } from '../../redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actons from '../../redux/actons';\nimport './Filter.scss';\n\nfunction Filter() {\n  const filter = useSelector(filterValue);\n  const dispatch = useDispatch();\n  return (\n    <input\n      className=\"input\"\n      type=\"text\"\n      name=\"filter\"\n      onChange={e => dispatch(actons.filterContacts(e.target.value))}\n      value={filter}\n      placeholder=\"search contact\"\n    ></input>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContacts } from '../../redux/selectors';\nimport actons from '../../redux/actons';\nimport './ContactList.scss';\n\nfunction ContactList() {\n  const contacts = useSelector(filteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className=\"list\">\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <p className=\"title\">Name: {contact.name}</p>\n          <p className=\"title\">Number: {contact.number}</p>\n          <button\n            className=\"button\"\n            onClick={() => dispatch(actons.deleteContact(contact.id))}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.scss';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}